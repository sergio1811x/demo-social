{"version":3,"file":"static/js/738.271d8755.chunk.js","mappings":"8JACA,EAA0B,yBAA1B,EAA4D,wBAA5D,EAA0I,wBAA1I,EAA6K,0BAA7K,EAAkN,0B,mBCclN,EAVoB,SAACA,GACjB,IAAIC,EAAO,YAAeD,EAAME,GAC/B,OACI,gBAAKC,UAAWC,EAAhB,UACI,UAAC,KAAD,CAASC,GAAIJ,EAAME,UAAc,SAAAG,GAAO,OAAIA,EAAQC,SAAWH,EAAWA,GAA1E,cAAuFJ,EAAMQ,KAA7F,WCKb,EARgB,SAACR,GACb,OACI,iBAAKG,UAAWC,EAAhB,cAA8BJ,EAAMS,QAApC,Q,UCgCR,EAlCuB,SAACT,GAIpB,OACI,SAAC,KAAD,CACIU,cAAe,CACXC,eAAgB,IAEpBC,SAAU,SAACC,EAAD,GAA0B,IAAhBC,EAAe,EAAfA,UACZD,EAAOF,eAAeI,QAAS,IAT3B,SAACF,GACjBb,EAAMgB,YAAYH,GASVI,CAAcJ,EAAOF,gBACrBG,EAAU,CAACD,OAAQ,MAEfK,QAAQC,IAAI,mCATxB,SAYK,kBACG,UAAC,KAAD,YACI,0BACI,SAAC,KAAD,CAAOhB,UAAWC,EACXI,KAAM,iBACNY,KAAM,OACNC,YAAa,0BAGxB,0BACI,mBAAQD,KAAM,SAAd,8ECExB,EA5BgB,SAACpB,GAEb,IAAIsB,EAAQtB,EAAMuB,aAEdC,EAAiBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAD,CAAYzB,GAAIyB,EAAEzB,GAAeM,KAAMmB,EAAEnB,MAAdmB,EAAEzB,OACrE0B,EAAmBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,SAAC,EAAD,CAAS5B,GAAI4B,EAAE5B,GAAeO,QAASqB,EAAErB,SAAjBqB,EAAE5B,OAGzE,OACI,iBAAKC,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SACKoB,KAGL,gBAAKrB,UAAWC,EAAhB,SACOwB,KAEP,0BAEI,SAAC,EAAD,CAAkBZ,YAAahB,EAAMgB,oB,mBCMrD,G,SAN0Be,E,QAAAA,KAEtBC,EAAAA,EAAAA,KAlBkB,SAACV,GACnB,MAAO,CACHC,aAAcD,EAAMC,iBAKH,SAACU,GACtB,MAAO,CACOjB,YAAa,SAACL,GACpBsB,GAASC,EAAAA,EAAAA,GAAmBvB,SAMdoB,CAGxBI,K,gJCvBEC,EAA6B,SAACd,GAAD,MAAY,CACzCe,OAAQf,EAAMgB,KAAKD,SAIVE,EAAmB,SAACC,GAAe,IACtCC,EADqC,0IAEvC,WACI,OAAKC,KAAK1C,MAAMqC,QACH,SAAC,KAAD,CAAUhC,GAAG,eAAgB,SAACmC,GAAD,UAAeE,KAAK1C,SAD7B,SAAC,KAAD,CAAUK,GAAG,eAHX,GACXsC,EAAAA,WAUhC,OAFkCX,EAAAA,EAAAA,IAAQI,EAARJ,CAAoCS","sources":["webpack://my-app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogsItem/DialogsItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Message/AddMessage.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__H8Jf-\",\"dialog\":\"Dialogs_dialog__QRfsP\",\"dialogsItems\":\"Dialogs_dialogsItems__5RX+D\",\"active\":\"Dialogs_active__umlcD\",\"messages\":\"Dialogs_messages__kErej\",\"textarea\":\"Dialogs_textarea__hTke+\"};","import s from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\n\r\nconst  DialogItem = (props) => {\r\n    let path = '/dialogs/' +  props.id\r\n     return (\r\n         <div className={s.dialog}>\r\n             <NavLink to={path} className = { navData => navData.isActive ? s.active : s.dialog} > {props.name}  </NavLink>\r\n         </div>\r\n     )\r\n}\r\n\r\n\r\nexport default DialogItem","import s from './../Dialogs.module.css'\r\n\r\n\r\n\r\n\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.messages}> {props.message} </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Message","import {Formik, Form, Field} from \"formik\";\r\nimport s from \"../Dialogs.module.css\";\r\nimport * as React from \"react\";\r\nimport { Button } from '@material-ui/core';\r\n\r\n\r\nconst AddMassageForm = (props) => {\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values);\r\n    }\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                newMessageBody: \"\"\r\n            }}\r\n            onSubmit={(values, {resetForm}) => {\r\n                if (values.newMessageBody.length >=1 ) {\r\n                addNewMessage(values.newMessageBody);\r\n                resetForm({values: ''});}\r\n                else  {\r\n                    console.log('пусто')\r\n                }\r\n            }}>\r\n            {() => (\r\n                <Form>\r\n                    <div>\r\n                        <Field className={s.textarea}\r\n                               name={'newMessageBody'}\r\n                               type={'text'}\r\n                               placeholder={'Enter your message'}/>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <button type={'submit'}> Отправить</button>\r\n                    </div>\r\n                </Form>)}\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default AddMassageForm","import s from './Dialogs.module.css'\r\nimport DialogItem from './DialogsItem/DialogsItem'\r\nimport Message from \"./Message/Message\";\r\nimport * as React from \"react\";\r\nimport AddMassageForm  from \"./Message/AddMessage\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.messagesPage\r\n\r\n    let dialogElements = state.dialogs.map(d => <DialogItem id={d.id} key={d.id} name={d.name}/>)\r\n    let messagesElements = state.messages.map(t => <Message id={t.id} key={t.id} message={t.message}/>)\r\n\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialog}>\r\n                {dialogElements}\r\n            </div>\r\n\r\n            <div className={s.messages}>\r\n                  {messagesElements}\r\n            </div>\r\n            <div>\r\n\r\n                <AddMassageForm   sendMessage={props.sendMessage}  />\r\n\r\n\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Dialogs","import * as React from \"react\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {sendMessageCreator} from \"../../redux/Reducers/messages-reducer\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        messagesPage: state.messagesPage,\r\n    }\r\n}\r\n\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n                  sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\n\r\n const DialogsContainer = compose(\r\n //   withAuthRedirect,\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(Dialogs)\r\n\r\n\r\nexport default DialogsContainer","import * as React from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth)   return <Navigate to='/login'/>\r\n           else  return  <Navigate to='/profile'/> && <Component {...this.props}/>\r\n           // <Component {...this.props}/>\r\n\r\n        }\r\n    }\r\n let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}\r\n\r\n\r\n"],"names":["props","path","id","className","s","to","navData","isActive","name","message","initialValues","newMessageBody","onSubmit","values","resetForm","length","sendMessage","addNewMessage","console","log","type","placeholder","state","messagesPage","dialogElements","dialogs","map","d","messagesElements","messages","t","compose","connect","dispatch","sendMessageCreator","Dialogs","mapStateToPropsForRedirect","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","React"],"sourceRoot":""}