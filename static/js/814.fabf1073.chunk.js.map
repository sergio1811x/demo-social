{"version":3,"file":"static/js/814.fabf1073.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/common/Paginator/Paginator.module.css?6caa","components/common/Paginator/Paginator.jsx","components/Users/Users.jsx","redux/Reducers/users-selector.js","components/Users/UsersConteiner.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"paginator\":\"Paginator_paginator__KkG4h\",\"pageNumber\":\"Paginator_pageNumber__kx005\",\"selectedPage\":\"Paginator_selectedPage__9DkGP\"};","import React, {useState} from \"react\";\r\nimport s from './Paginator.module.css'\r\nimport  cn from \"classnames\"\r\n\r\nconst Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pageCount = Math.ceil(totalItemsCount / pageSize)\r\n    let pages = []\r\n    for (let i = 1; i <= pageCount; i++) {\r\n        pages.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pageCount / portionSize)\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let leftPortionNumberNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionNumberNumber = portionNumber * portionSize\r\n\r\n\r\n    return <div className={s.paginator}>\r\n        {portionNumber > 1 &&\r\n        <button onClick={() => {setPortionNumber(portionNumber-1)}}> PREV </button>}\r\n\r\n        {pages\r\n            .filter(p=> p >= leftPortionNumberNumber && p <= rightPortionNumberNumber)\r\n        .map((p) => {\r\n        return <span className={cn({\r\n        [s.selectedPage] : currentPage === p }, s.pageNumber)}\r\n                key = {p}\r\n                onClick={(e)=> {onPageChanged(p)}}>{p}  </span>\r\n                }) }\r\n        {portionCount > portionNumber &&\r\n            <button onClick={()=> {setPortionNumber(portionNumber+1)} }>Next</button>\r\n    }\r\n    </div>\r\n\r\n}\r\n\r\nexport default Paginator","import React from \"react\";\r\nimport s from './Users.module.css'\r\nimport img1 from '../../img/profile.png'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Button} from \"reactstrap\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\n\r\n\r\nlet Users = (props) => {\r\n    //\r\n    // let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize)\r\n    //\r\n    // let pages = []\r\n    // for (let i = 1; i <= pagesCount; i++) {\r\n    //     pages.push(i)\r\n    // }\r\n\r\n    return <div>\r\n        <div>\r\n            {/*{pages.map(p => {*/}\r\n            {/*    return <span className={props.currentPage === p && s.selectedPage}*/}\r\n            {/*                 onClick={(e) => {*/}\r\n            {/*                     props.onPageChanged(p)*/}\r\n            {/*                 }}>{p}  </span>*/}\r\n            {/*})}*/}\r\n\r\n            <Paginator currentPage={props.currentPage} onPageChanged={props.onPageChanged}\r\n                       totalItemsCount={props.totalUsersCount}  pageSize={props.pageSize}/>\r\n\r\n        </div>\r\n        {props.users.map(u => <div key={u.id}>\r\n\r\n                <div className={s.block}>\r\n\r\n                <div>\r\n                    <NavLink to={'/profile/' + u.id}>\r\n                    <img src={u.photos.small != null ? u.photos.small : img1} className={s.photoUrl}/>\r\n                    </NavLink>\r\n                    </div>\r\n                <div className={s.button}> {u.followed\r\n                    ? <Button disabled={props.fallowingInProgress.some(id => id === u.id)}\r\n                              color=\"danger\"\r\n                              onClick={() => {\r\n                                  props.unFollow(u.id)\r\n                              }}>Unfollow</Button>\r\n\r\n                    : <Button disabled={props.fallowingInProgress.some(id => id === u.id)}\r\n                              color=\"success\"\r\n                              onClick={() => {\r\n                                  props.follow(u.id)\r\n                              }}>Follow</Button>}\r\n                </div>\r\n\r\n                    <div>{u.name}</div>\r\n                    <div>{u.status}</div>\r\n\r\n\r\n\r\n                </div>\r\n\r\n\r\n\r\n\r\n        </div>)\r\n        }\r\n    </div>\r\n}\r\n\r\nexport default Users","\r\n\r\nexport const getUser = (state) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getUsersCount= (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport  const getFollowingInProgress= (state) => {\r\n    return state.usersPage.fallowingInProgress\r\n}","import React, {useEffect} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    getUsers,\r\n    setCurrentPage,\r\n    toggleFollowingInProgress,\r\n    unFollow\r\n} from \"../../redux/Reducers/users-derucer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/preloader/Preloader\";\r\nimport {\r\n    getCurrentPage,\r\n    getFetching,\r\n    getFollowingInProgress,\r\n    getPageSize,\r\n    getUser,\r\n    getUsersCount\r\n} from \"../../redux/Reducers/users-selector\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\nconst UsersContainer = (props) => {\r\n    useEffect(() => {\r\n            props.getUsers(props.currentPage, props.pageSize)}, [props.currentPage, props.pageSize]\r\n    )\r\n\r\n    const onPageChanged = (pageNumber) => {\r\n        props.setCurrentPage(pageNumber);\r\n        props.getUsers(pageNumber, props.pageSize)\r\n    }\r\n    return <>\r\n        {props.isFetching ? <Preloader/> : null}\r\n        <Users totalUsersCount={props.totalUsersCount}\r\n               pageSize={props.pageSize}\r\n               currentPage={props.currentPage}\r\n               onPageChanged={onPageChanged}\r\n               users={props.users}\r\n               unFollow={props.unFollow}\r\n               follow={props.follow}\r\n               fallowingInProgress={props.fallowingInProgress}\r\n        />\r\n    </>\r\n}\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUser(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getFetching(state),\r\n        fallowingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n //  withAuthRedirect,\r\n    connect(mapStateToProps, {\r\n        follow,\r\n        setCurrentPage,\r\n        unFollow,\r\n        toggleFollowingInProgress,\r\n        getUsers\r\n    }))(UsersContainer)\r\n","import * as React from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth)   return <Navigate to='/login'/>\r\n           else  return  <Navigate to='/profile'/> && <Component {...this.props}/>\r\n           // <Component {...this.props}/>\r\n\r\n        }\r\n    }\r\n let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}\r\n\r\n\r\n"],"names":["totalItemsCount","pageSize","currentPage","onPageChanged","portionSize","pageCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionNumberNumber","rightPortionNumberNumber","className","s","onClick","filter","p","map","cn","e","props","totalUsersCount","users","u","to","id","src","photos","small","img1","followed","disabled","fallowingInProgress","some","color","unFollow","follow","name","status","getUser","state","usersPage","getPageSize","getUsersCount","getCurrentPage","getFetching","isFetching","getFollowingInProgress","compose","connect","setCurrentPage","toggleFollowingInProgress","getUsers","useEffect","Preloader","pageNumber","mapStateToPropsForRedirect","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","React"],"sourceRoot":""}